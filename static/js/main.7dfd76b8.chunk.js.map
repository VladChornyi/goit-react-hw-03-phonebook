{"version":3,"sources":["components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","components/contactsForm/ContactsForm.module.css","components/contactsForm/ContactsForm.jsx","components/contactsList/ContactsList.jsx","components/filter/Filter.jsx","components/App.jsx","index.js"],"names":["module","exports","ContactsForm","initialState","name","number","state","onHandleSubmit","e","preventDefault","props","addContact","setState","onHandleChange","target","value","className","s","form","onSubmit","this","title","data","type","pattern","required","onChange","addBtn","Component","ContactsList","contacts","onRemoveContact","map","contact","delBtn","onClick","id","Filter","onChangeFilter","App","filter","user","toLowerCase","includes","alert","shortid","generate","prev","getFilteredContacts","normalizedFilter","changeFilter","removeContact","contactId","prevState","savedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dfd76b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__zsG2S\",\"data\":\"Filter_data__3AROc\",\"title\":\"Filter_title__3-eV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delBtn\":\"ContactsList_delBtn__1P8mX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__27sHV\",\"addBtn\":\"ContactsForm_addBtn__1HNjV\",\"data\":\"ContactsForm_data__1j7IW\",\"title\":\"ContactsForm_title__xT328\"};","import React, { Component } from 'react';\r\nimport s from './ContactsForm.module.css'\r\n\r\n\r\nclass ContactsForm extends Component {\r\n  initialState = {\r\n    name: '',\r\n    number: ''\r\n\r\n  }\r\n  \r\n    state = {\r\n        ...this.initialState\r\n    }\r\n      onHandleSubmit = (e) => {\r\n          e.preventDefault();\r\n        this.props.addContact(this.state)\r\n        this.setState({...this.initialState})\r\n   }\r\n\r\n  onHandleChange = (e) => {\r\n    const {name, value} = e.target\r\n    this.setState( {[name]: value} )\r\n  }\r\n    render() {\r\n        return (\r\n            <form className={s.form} onSubmit={this.onHandleSubmit} >\r\n                <label className={s.title} >\r\n                    Name\r\n              <input\r\n                className={s.data}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={this.state.name}\r\n                    onChange ={this.onHandleChange}\r\n                    />\r\n                </label>\r\n                <label className={s.title} >\r\n                    Number\r\n              <input\r\n                        className={s.data}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        value={this.state.number}\r\n                        onChange={this.onHandleChange}\r\n                        />\r\n                </label>\r\n                \r\n        <button className={s.addBtn} type=\"submit\">add contact</button>\r\n      </form>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactsForm;\r\n","import s from './ContactsList.module.css'\r\nimport PropTypes from \"prop-types\"; \r\n\r\nconst ContactsList = ({contacts,onRemoveContact}) => {\r\n    return (\r\n    <>\r\n        <ul>\r\n            {contacts.map((contact) => (\r\n                <li key={contact.id}>{`${contact.name} : ${contact.number}`}\r\n                    <button\r\n                         className={s.delBtn}\r\n                        type='button'\r\n                        name='delete'\r\n                    onClick={()=>onRemoveContact(contact.id)}>Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    </>\r\n        \r\n    );\r\n}\r\n\r\nexport default ContactsList;\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};","import s from './Filter.module.css'\r\nimport PropTypes from \"prop-types\"; \r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n    return (\r\n        <>\r\n        <label className={s.title} >Find contacts by name\r\n                <input\r\n                    className={s.data}\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={(e) => onChangeFilter(e.target.value)} />\r\n        </label>\r\n        </>\r\n    );\r\n}\r\nexport default Filter;\r\n\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};","import React, { Component } from 'react';\nimport ContactsForm from './contactsForm/ContactsForm';\nimport ContactsList from './contactsList/ContactsList';\nimport Filter from './filter/Filter';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  componentDidMount() {\n    const savedContacts = JSON.parse(localStorage.getItem('contacts'));\n    this.setState({ contacts: savedContacts });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = number => {\n    const searchRepeat = this.state.contacts\n      .map(user => user.name.toLowerCase())\n      .includes(number.name.toLowerCase());\n\n    if (searchRepeat) {\n      alert(`${number.name} is already in contacts`);\n    } else {\n      const contact = {\n        ...number,\n        id: shortid.generate(),\n      };\n      this.setState(prev => ({ contacts: [...prev.contacts, contact] }));\n    }\n  };\n\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  removeContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactsForm addContact={this.addContact} />\n\n          <h2>Contacts</h2>\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n          <ContactsList\n            contacts={this.getFilteredContacts()}\n            onRemoveContact={this.removeContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}